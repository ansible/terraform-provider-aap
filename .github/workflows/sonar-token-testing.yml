---
# Test sonar token validity and demonstrate secret name dereference
name: 'Sonar Token Example'

on:
  workflow_dispatch:
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  token:
    runs-on: ubuntu-latest
    name: 'Sonar Token Example'
    steps:
      - name: 'Check token'
        env:
          SONAR_TOKEN: ${{ secrets[format('{0}', vars.SONAR_TOKEN_SECRET_NAME)] }}
        run: |
          VALIDITY=$(curl -s\
            -u $SONAR_TOKEN: \
            "https://sonarcloud.io/api/authentication/validate" \
            --request GET \
          | jq '."valid"')
          echo "Should be true: "$VALIDITY
          VALIDITY=$(curl -s\
            -u GaRbAgE:DEADBEEF \
            "https://sonarcloud.io/api/authentication/validate" \
            --request GET \
          | jq '."valid"')
          echo "Should be false: "$VALIDITY
          echo "Secret name: "${{ vars.SONAR_TOKEN_SECRET_NAME }}

  token2:
    runs-on: ubuntu-latest
    name: 'Sonar Token2 Example'
    steps:
      - name: 'Check token2'
        env:
          SONAR_TOKEN: ${{ CICD_ORG_SONAR_TOKEN_CICD_BOT }}
        run: |
          VALIDITY=$(curl -s\
            -u $SONAR_TOKEN: \
            "https://sonarcloud.io/api/authentication/validate" \
            --request GET \
          | jq '."valid"')
          echo "Should be true: "$VALIDITY
          VALIDITY=$(curl -s\
            -u GaRbAgE:DEADBEEF \
            "https://sonarcloud.io/api/authentication/validate" \
            --request GET \
          | jq '."valid"')
          echo "Should be false: "$VALIDITY
          echo "Secret name: "${{ vars.SONAR_TOKEN_SECRET_NAME }}
